// Code generated by MockGen. DO NOT EDIT.
// Source: escort-book-delete-customers/repositories (interfaces: ICardRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
)

// MockICardRepository is a mock of ICardRepository interface.
type MockICardRepository struct {
	ctrl     *gomock.Controller
	recorder *MockICardRepositoryMockRecorder
}

// MockICardRepositoryMockRecorder is the mock recorder for MockICardRepository.
type MockICardRepositoryMockRecorder struct {
	mock *MockICardRepository
}

// NewMockICardRepository creates a new mock instance.
func NewMockICardRepository(ctrl *gomock.Controller) *MockICardRepository {
	mock := &MockICardRepository{ctrl: ctrl}
	mock.recorder = &MockICardRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICardRepository) EXPECT() *MockICardRepositoryMockRecorder {
	return m.recorder
}

// DeleteMany mocks base method.
func (m *MockICardRepository) DeleteMany(arg0 context.Context, arg1 primitive.M) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteMany", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteMany indicates an expected call of DeleteMany.
func (mr *MockICardRepositoryMockRecorder) DeleteMany(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteMany", reflect.TypeOf((*MockICardRepository)(nil).DeleteMany), arg0, arg1)
}
