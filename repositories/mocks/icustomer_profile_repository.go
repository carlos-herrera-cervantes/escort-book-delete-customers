// Code generated by MockGen. DO NOT EDIT.
// Source: escort-book-delete-customers/repositories (interfaces: ICustomerProfileRepository)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "escort-book-delete-customers/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockICustomerProfileRepository is a mock of ICustomerProfileRepository interface.
type MockICustomerProfileRepository struct {
	ctrl     *gomock.Controller
	recorder *MockICustomerProfileRepositoryMockRecorder
}

// MockICustomerProfileRepositoryMockRecorder is the mock recorder for MockICustomerProfileRepository.
type MockICustomerProfileRepositoryMockRecorder struct {
	mock *MockICustomerProfileRepository
}

// NewMockICustomerProfileRepository creates a new mock instance.
func NewMockICustomerProfileRepository(ctrl *gomock.Controller) *MockICustomerProfileRepository {
	mock := &MockICustomerProfileRepository{ctrl: ctrl}
	mock.recorder = &MockICustomerProfileRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockICustomerProfileRepository) EXPECT() *MockICustomerProfileRepositoryMockRecorder {
	return m.recorder
}

// Delete mocks base method.
func (m *MockICustomerProfileRepository) Delete(arg0 context.Context, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockICustomerProfileRepositoryMockRecorder) Delete(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockICustomerProfileRepository)(nil).Delete), arg0, arg1)
}

// Get mocks base method.
func (m *MockICustomerProfileRepository) Get(arg0 context.Context, arg1 string) (models.CustomerProfile, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(models.CustomerProfile)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockICustomerProfileRepositoryMockRecorder) Get(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockICustomerProfileRepository)(nil).Get), arg0, arg1)
}
