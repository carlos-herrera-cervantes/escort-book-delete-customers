// Code generated by MockGen. DO NOT EDIT.
// Source: escort-book-delete-customers/responsabilities (interfaces: IAccountRemovalStep)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "escort-book-delete-customers/models"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIAccountRemovalStep is a mock of IAccountRemovalStep interface.
type MockIAccountRemovalStep struct {
	ctrl     *gomock.Controller
	recorder *MockIAccountRemovalStepMockRecorder
}

// MockIAccountRemovalStepMockRecorder is the mock recorder for MockIAccountRemovalStep.
type MockIAccountRemovalStepMockRecorder struct {
	mock *MockIAccountRemovalStep
}

// NewMockIAccountRemovalStep creates a new mock instance.
func NewMockIAccountRemovalStep(ctrl *gomock.Controller) *MockIAccountRemovalStep {
	mock := &MockIAccountRemovalStep{ctrl: ctrl}
	mock.recorder = &MockIAccountRemovalStepMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccountRemovalStep) EXPECT() *MockIAccountRemovalStepMockRecorder {
	return m.recorder
}

// Execute mocks base method.
func (m *MockIAccountRemovalStep) Execute(arg0 context.Context, arg1 []models.CustomerRemoval) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Execute", arg0, arg1)
}

// Execute indicates an expected call of Execute.
func (mr *MockIAccountRemovalStepMockRecorder) Execute(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Execute", reflect.TypeOf((*MockIAccountRemovalStep)(nil).Execute), arg0, arg1)
}
