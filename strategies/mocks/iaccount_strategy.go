// Code generated by MockGen. DO NOT EDIT.
// Source: escort-book-delete-customers/strategies (interfaces: IAccountStrategy)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIAccountStrategy is a mock of IAccountStrategy interface.
type MockIAccountStrategy struct {
	ctrl     *gomock.Controller
	recorder *MockIAccountStrategyMockRecorder
}

// MockIAccountStrategyMockRecorder is the mock recorder for MockIAccountStrategy.
type MockIAccountStrategyMockRecorder struct {
	mock *MockIAccountStrategy
}

// NewMockIAccountStrategy creates a new mock instance.
func NewMockIAccountStrategy(ctrl *gomock.Controller) *MockIAccountStrategy {
	mock := &MockIAccountStrategy{ctrl: ctrl}
	mock.recorder = &MockIAccountStrategyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIAccountStrategy) EXPECT() *MockIAccountStrategyMockRecorder {
	return m.recorder
}

// SwitchAccountRemoval mocks base method.
func (m *MockIAccountStrategy) SwitchAccountRemoval(arg0 context.Context, arg1 []byte) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "SwitchAccountRemoval", arg0, arg1)
}

// SwitchAccountRemoval indicates an expected call of SwitchAccountRemoval.
func (mr *MockIAccountStrategyMockRecorder) SwitchAccountRemoval(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SwitchAccountRemoval", reflect.TypeOf((*MockIAccountStrategy)(nil).SwitchAccountRemoval), arg0, arg1)
}
